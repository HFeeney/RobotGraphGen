/* autogenerated by Processing revision 1293 on 2024-05-07 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class halton_sequence extends PApplet {

HaltonSequence hs;
VanDerCorput vdc;

public void setup () {
    /* size commented out by preprocessor */;
    background(255, 255, 255);
    hs = new HaltonSequence(2, 3);
    vdc = new VanDerCorput(2);
    frameRate(2);
}

public void draw() {
    double[] point = hs.next();
    float x = (float)point[0] * width;
    float y = (float)point[1] * height;

    strokeWeight(8);
    stroke(x / width * 100 + 155, y / height * 100 + 155, 255);
    point(x, y);

    float x2 = (float) vdc.next();
    stroke(255, 55 + 200 * x2, 255 * x2);
    point(x2 * width, height / 2);
}


  public void settings() { size(500, 500); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "halton_sequence" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
